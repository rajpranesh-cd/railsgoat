name: Ruby Dependency Vulnerability Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - "*"

jobs:
  ruby-audit:
    name: Ruby Dependency Vulnerability Check
    runs-on: ubuntu-latest


    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Check for Ruby project (Gemfile)
      - name: Check for Ruby project
        id: ruby_detected
        run: |
          if [ -f "Gemfile" ]; then
            echo "Ruby project detected."
            echo "is_ruby=true" >> $GITHUB_ENV
          else
            echo "No Ruby project found."
            echo "is_ruby=false" >> $GITHUB_ENV
          fi

      # Step 2: Set up rbenv and install Ruby
      - name: Set up rbenv and Ruby
        if: env.is_ruby == 'true'
        continue-on-error: true  # Prevent failure if Ruby installation fails
        run: |
          echo "Installing rbenv and Ruby..."
          sudo apt-get update
          sudo apt-get install -y rbenv ruby-build
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc

          # Install the desired Ruby version (e.g., 3.2.0)
          rbenv install 3.2.0 || echo "Ruby version 3.2.0 not found. Trying alternative versions..."
          rbenv global 3.2.0 || echo "Failed to set Ruby version 3.2.0 as global."

          echo "Ruby version:"
          ruby --version || echo "Ruby is not installed."

      # Step 3: Install Bundler and Bundler Audit
      - name: Install Bundler and Bundler Audit
        if: env.is_ruby == 'true'
        continue-on-error: true  # Prevent failure if gem installation fails
        run: |
          echo "Installing bundler and bundler-audit..."
          gem install bundler bundler-audit || echo "Failed to install bundler or bundler-audit."
          echo "Installed bundler and bundler-audit."

      # Step 4: Run Bundler Audit
      - name: Run Bundler Audit
        if: env.is_ruby == 'true'
        continue-on-error: true  # Prevent failure if bundler-audit fails
        run: |
          echo "Running bundler-audit..."
          bundle install || echo "Failed to install dependencies."
          bundler-audit check --gemfile-lock Gemfile.lock --update > bundler_audit_report.txt || true
          echo "Contents of bundler_audit_report.txt:"
          cat bundler_audit_report.txt

      # Step 5: Extract GHSA IDs from Bundler Audit Report
      - name: Extract GHSA IDs from Bundler Audit Report
        if: env.is_ruby == 'true'
        continue-on-error: true  # Prevent failure if extraction fails
        run: |
          echo "Extracting GHSA IDs from bundler_audit_report.txt..."
          grep -oP 'GHSA-\w{4}-\w{4}-\w{4}' bundler_audit_report.txt > extracted_ghsa_ids.txt || echo "No GHSA IDs found."
          echo "Extracted GHSA IDs:"
          cat extracted_ghsa_ids.txt

